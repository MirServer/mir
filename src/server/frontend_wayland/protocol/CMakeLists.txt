get_filename_component(
  PROTOCOL_DIR src/server/frontend_wayland/protocol/
  ABSOLUTE
  BASE_DIR ${PROJECT_SOURCE_DIR}
)

get_filename_component(
  GENERATED_DIR src/server/frontend_wayland/generated/
  ABSOLUTE
  BASE_DIR ${PROJECT_SOURCE_DIR}
)

set(GENERATED_FILES "")

macro(GENERATE_PROTOCOL NAME_PREFIX PROTOCOL_NAME)
  set(PROTOCOL_PATH "${PROTOCOL_DIR}/${PROTOCOL_NAME}.xml")
  set(OUTPUT_PATH_C "${GENERATED_DIR}/${PROTOCOL_NAME}.c")
  set(OUTPUT_PATH_H "${GENERATED_DIR}/${PROTOCOL_NAME}.h")
  set(OUTPUT_PATH_WRAPPER "${GENERATED_DIR}/${PROTOCOL_NAME}_wrapper.h")
  add_custom_command(OUTPUT "${OUTPUT_PATH_C}"
    VERBATIM
    COMMAND "wayland-scanner" "--include-core-only" "code" "${PROTOCOL_PATH}" "${OUTPUT_PATH_C}"
    DEPENDS "${PROTOCOL_PATH}"
  )
  add_custom_command(OUTPUT "${OUTPUT_PATH_H}"
    VERBATIM
    COMMAND "wayland-scanner" "--include-core-only" "server-header" "${PROTOCOL_PATH}" "${OUTPUT_PATH_H}"
    DEPENDS "${PROTOCOL_PATH}"
  )
  add_custom_command(OUTPUT "${OUTPUT_PATH_WRAPPER}"
    VERBATIM
    COMMAND "sh" "-c" "${mir_wayland_scanner_cmd} ${NAME_PREFIX} ${PROTOCOL_NAME}.h ${PROTOCOL_PATH} > ${OUTPUT_PATH_WRAPPER}"
    DEPENDS "${PROTOCOL_PATH}"
    DEPENDS ${mir_wayland_scanner_cmd}
    DEPENDS mir-wayland-scanner
  )
  set(GENERATED_FILES ${GENERATED_FILES} "${OUTPUT_PATH_H}" "${OUTPUT_PATH_C}" "${OUTPUT_PATH_WRAPPER}")
endmacro()

add_custom_command(OUTPUT "/tmp/binary_info"
  VERBATIM
  COMMAND "sh" "-c" "file ${mir_wayland_scanner_cmd} >&2"
  COMMAND "sh" "-c" "echo cmake C++ compiler [should be target]: ${CMAKE_CXX_COMPILER} : ${CMAKE_CXX_FLAGS} >&2"
  DEPENDS ${mir_wayland_scanner_cmd}
  DEPENDS mir-wayland-scanner
)

# when adding a protocol, don't forget to add the generated .c file to CMake
GENERATE_PROTOCOL("wl_" "wayland")
GENERATE_PROTOCOL("z" "xdg-shell-unstable-v6")
GENERATE_PROTOCOL("_" "xdg-shell") # empty prefix is not allowed, but '_' won't match anything, so it is ignored

add_custom_target(refresh-wayland-wrapper
  DEPENDS /tmp/binary_info
  DEPENDS mir-wayland-scanner
  DEPENDS ${GENERATED_FILES}
  SOURCES ${GENERATED_FILES}
)
